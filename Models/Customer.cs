//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FIT5032_Assignment_Portfolio_Final.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Customer
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Customer()
        {
            this.Events = new HashSet<Event>();
            this.Bookings = new HashSet<Booking>();
            this.Friends = new HashSet<Friend>();
        }
    
        public int CustId { get; set; }
        [Required]
        public string Name { get; set; }
        [Required]
        [EmailAddress]
        public string Email { get; set; }
        [Required]
        public string Password { get; set; }
        [Required]

        public string PhoneNumber { get; set; }
        [Required(ErrorMessage = "Enter a Valid Date Of Birth, you must be over 18!")]
        [MinimumAgeValidation(18)]
        public System.DateTime DateOfBirth { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Event> Events { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Booking> Bookings { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Friend> Friends { get; set; }
    }

    public class MinimumAgeValidation : ValidationAttribute
    {
        int TempMinimumAge;
        public MinimumAgeValidation (int MinAge)
        {
            TempMinimumAge = MinAge;
        }
        public override bool IsValid(object value)
        {
            DateTime CheckDate;
            if(DateTime.TryParse(value.ToString(), out CheckDate))
            {
                return CheckDate.AddYears(TempMinimumAge) < DateTime.Now;
            }
            return false;
        }
    }
}
